mkdir flask_redis
cd flask_redis
touch docker-compose.yml app.py
______________________________________________________________________________

root@nc-ph-0423-14 flask_redis$ ll
total 20
drwxr-xr-x 2 root root 4096 Feb 22 05:39 ./
drwx------ 7 root root 4096 Feb 22 04:53 ../
-rw-r--r-- 1 root root  349 Feb 22 05:39 app.py
-rw-r--r-- 1 root root  287 Feb 22 05:33 docker-compose.yml
-rw-r--r-- 1 root root  123 Feb 22 05:30 Dockerfile
root@nc-ph-0423-14 flask_redis$ cat app.py
from flask import Flask
import redis

app = Flask(__name__)
redis_client = redis.Redis(host='redis_db', port=6379, decode_responses=True)

@app.route('/')
def home():
    count = redis_client.incr('visits')
    return f"Эту страницу посетили {count} раз(а)!"

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
    
__________________________________________________________________________________________


root@nc-ph-0423-14 flask_redis$ cat docker-compose.yml
version: '3.8'

services:
  web:
    image: flask-app
    container_name: flask_web
    build: .
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    depends_on:
      - redis_db

  redis_db:
    image: redis:latest
    container_name: redis_db
    ports:
      - "6379:6379"
__________________________________________________________________________________________

root@nc-ph-0423-14 flask_redis$ cat Dockerfile
FROM python:3.9

WORKDIR /app

COPY . .

RUN pip install --no-cache-dir flask redis

EXPOSE 5000

CMD ["python", "app.py"]


__________________________________________________________________________________________
root@nc-ph-0423-14 flask_redis$ docker-compose up -d --build
Creating network "flask_redis_default" with the default driver
Pulling redis_db (redis:latest)...
latest: Pulling from library/redis
c29f5b76f736: Pull complete
5de2dd3ff2ef: Pull complete
6c334acf232e: Pull complete
3090e1a50a6c: Pull complete
f5bc47c37726: Pull complete
20eea55b3ebb: Pull complete
4f4fb700ef54: Pull complete
d128ccd842a6: Pull complete
Digest: sha256:93a8d83b707d0d6a1b9186edecca2e37f83722ae0e398aee4eea0ff17c2fad0e
Status: Downloaded newer image for redis:latest
Building web
DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

Sending build context to Docker daemon  4.096kB
Step 1/6 : FROM python:3.9
3.9: Pulling from library/python
a492eee5e559: Pull complete 
32b550be6cb6: Pull complete 
35af2a7690f2: Pull complete 
7576b00d9bb1: Pull complete 
a99bce2787d5: Pull complete 
34ebcaeb2b96: Pull complete 
8ccfaa3abdee: Pull complete 
Digest: sha256:c17c71e1f5f258803a6b7c391f8013adbf84285af54c2a811de4a5a1ac5a8676
Status: Downloaded newer image for python:3.9
 ---> bb95474bc3b1
Step 2/6 : WORKDIR /app
 ---> Running in 9f57b9c97b4a
 ---> Removed intermediate container 9f57b9c97b4a
 ---> 727c111f898a
Step 3/6 : COPY . .
 ---> a3a7f80f6579
Step 4/6 : RUN pip install --no-cache-dir flask redis
 ---> Running in 1526f9aa0cbc
Collecting flask
  Downloading flask-3.1.0-py3-none-any.whl (102 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 103.0/103.0 kB 5.1 MB/s eta 0:00:00
Collecting redis
  Downloading redis-5.2.1-py3-none-any.whl (261 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 261.5/261.5 kB 25.1 MB/s eta 0:00:00
Collecting Jinja2>=3.1.2
  Downloading jinja2-3.1.5-py3-none-any.whl (134 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 134.6/134.6 kB 206.2 MB/s eta 0:00:00
Collecting click>=8.1.3
  Downloading click-8.1.8-py3-none-any.whl (98 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 98.2/98.2 kB 196.6 MB/s eta 0:00:00
Collecting importlib-metadata>=3.6
  Downloading importlib_metadata-8.6.1-py3-none-any.whl (26 kB)
Collecting blinker>=1.9
  Downloading blinker-1.9.0-py3-none-any.whl (8.5 kB)
Collecting Werkzeug>=3.1
  Downloading werkzeug-3.1.3-py3-none-any.whl (224 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 224.5/224.5 kB 196.7 MB/s eta 0:00:00
Collecting itsdangerous>=2.2
  Downloading itsdangerous-2.2.0-py3-none-any.whl (16 kB)
Collecting async-timeout>=4.0.3
  Downloading async_timeout-5.0.1-py3-none-any.whl (6.2 kB)
Collecting zipp>=3.20
  Downloading zipp-3.21.0-py3-none-any.whl (9.6 kB)
Collecting MarkupSafe>=2.0
  Downloading MarkupSafe-3.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (20 kB)
Installing collected packages: zipp, MarkupSafe, itsdangerous, click, blinker, async-timeout, Werkzeug, redis, Jinja2, importlib-metadata, flask
Successfully installed Jinja2-3.1.5 MarkupSafe-3.0.2 Werkzeug-3.1.3 async-timeout-5.0.1 blinker-1.9.0 click-8.1.8 flask-3.1.0 importlib-metadata-8.6.1 itsdangerous-2.2.0 redis-5.2.1 zipp-3.21.0
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv

[notice] A new release of pip is available: 23.0.1 -> 25.0.1
[notice] To update, run: pip install --upgrade pip
 ---> Removed intermediate container 1526f9aa0cbc
 ---> 6e9bba7151c5
Step 5/6 : EXPOSE 5000
 ---> Running in 156213e00019
 ---> Removed intermediate container 156213e00019
 ---> 3242253471e3
Step 6/6 : CMD ["python", "app.py"]
 ---> Running in 306c0a15e8b0
 ---> Removed intermediate container 306c0a15e8b0
 ---> 39d8a6499cc2
Successfully built 39d8a6499cc2
Successfully tagged flask-app:latest
Creating redis_db ... done
Creating flask_web ... done



__________________________________________________________________________________________
root@nc-ph-0423-14 flask_redis$ docker ps
CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                                       NAMES
22fc50130fa6   flask-app      "python app.py"          12 seconds ago   Up 10 seconds   0.0.0.0:5000->5000/tcp, :::5000->5000/tcp   flask_web
45ae81de7ec6   redis:latest   "docker-entrypoint.s…"   14 seconds ago   Up 12 seconds   0.0.0.0:6379->6379/tcp, :::6379->6379/tcp   redis_db


Result: http://66.85.133.174:5000/ 
Эту страницу посетили 4 раз(а)!


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Also, issues fixed:

Incorrectly called Redis. Corrected to redis_db in app.py

+ running after that docker-compose up -d --build, creates issues with already created redis container so, I had to prune all:
docker-compose down
docker system prune -a -f  and then again: docker-compose up -d --build


